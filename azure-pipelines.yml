# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

trigger:
  branches:
    include:
      - '*'  # must quote since "*" is a YAML reserved character; we want a string

pool:
  vmImage: 'ubuntu-16.04'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  SPARK_VERSION: '2.4.4'
  HADOOP_VERSION: '2.7'
  SPARK_HOME: $(Pipeline.Workspace)/spark-$(SPARK_VERSION)-bin-hadoop$(HADOOP_VERSION)
  SKIP_IT: true

stages:
  - stage: test
    displayName: "Run tests"
    jobs:
      - job: unit_tests_spark_client
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              options: -DskipTests
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: -Pazp-unit-tests -pl hudi-client/hudi-spark-client
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'unit tests spark client'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
      - job: unit_tests_utilities
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              options: -DskipTests
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: -Pazp-unit-tests -pl hudi-utilities
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'unit tests utilities'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
      - job: unit_tests_other_modules
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              options: -DskipTests
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: -Pazp-unit-tests -pl !hudi-utilities,!hudi-client/hudi-spark-client
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'unit tests other modules'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
      - job: functional_tests
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: -Pfunctional-tests
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'functional tests'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
      - job: integration_tests
        condition: eq(variables.SKIP_IT, false)
        steps:
          - script: |
              echo 'Downloading spark-$(SPARK_VERSION)-bin-hadoop$(HADOOP_VERSION)'
              wget http://archive.apache.org/dist/spark/spark-$(SPARK_VERSION)/spark-$(SPARK_VERSION)-bin-hadoop$(HADOOP_VERSION).tgz -O /tmp/spark-$(SPARK_VERSION).tgz
              tar -xvf /tmp/spark-$(SPARK_VERSION).tgz
              mkdir /tmp/spark-events/
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'verify'
              options: -Pintegration-tests
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'unit tests utilities'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx2g $(MAVEN_OPTS)'
          - task: InstallSSHKey@0
            displayName: 'Install an SSH key'
            inputs:
              knownHostsEntry: 'AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
              sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC3V7/S4xcskv2T5KYx+P2qr9XV+/Q6dfTCFpjojoymr+BQBkfciOMKzyEmFxi4AoHLJ/irfSAflffxM+PXHM7F4XNyVeCy00iMQABIWJ41KgOwyPWU3HFJOBXnE3x0umLcAJeodyJDBzyqUKAPMYgFDvMq2a5ULwAws1PTegNBb4RO9WIBiX4Q2jVpD/gJPXpBz/ju/6XUCz3TnKQJU2KAODnrWabqIdpPiXOACcKxfWOa8XQAVG830KbxrQYf3tFTx4OA48B6mcVfiFCsKf74W3t4b91T0zWahssneB0Ju+PHfN/SdTLKEbtzH8yEWBaeQjFTnHMiJ6azRD+h84S88cvYs5M4ZTkQImT7HG/PzAJAj7MVh8WuVwCDwWZu5OtPqdxdI7k66bK5lSkZMeO8ENLKeB5bo3R16VtUbIkgkbg/x4w0rXKKd066QUJlOKb1uUen/0mtrytSLGslD4VGKajDK+GVXwkTG1lhrgzwbwv3qU1GtamUH4RD2D9bDSE= nsb@Sivabalans-MBP.attlocal.net'
              sshKeySecureFile: 'id_rsa'
